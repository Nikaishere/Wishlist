{"version":3,"sources":["styles/modules/modal.module.scss","styles/modules/app.module.scss","styles/modules/button.module.scss","styles/modules/title.module.scss","components/PageTitle.js","utils/getClasses.js","components/Button.js","slices/todoSlice.js","components/Modal.js","components/AppHeader.js","components/TodoItem.js","components/AppContent.js","App.js","app/store.js","index.js","styles/modules/todoItem.module.scss"],"names":["module","exports","PageTitle","_ref","children","rest","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","style","title","getClasses","classes","filter","item","join","trim","buttonTypes","primary","secondary","SelectButton","_ref2","_excluded2","styles","button","button__select","Button","type","variant","concat","initialValue","filterStatus","todoList","localTodoList","window","localStorage","getItem","JSON","parse","setItem","getInitialTodo","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","push","payload","todoListArr","stringify","updateTodo","forEach","todo","id","status","_toConsumableArray","deleteTodo","index","splice","updateFilterStatus","_todoSlice$actions","actions","Modal","modalOpen","setModalOpen","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setStatus","dispatch","useDispatch","useEffect","wrapper","_jsxs","container","closeButton","onClick","onKeyDown","tabIndex","role","MdOutlineClose","form","onSubmit","e","preventDefault","uuid","time","Date","toLocaleString","toast","success","error","handleSubmit","formTitle","htmlFor","value","onChange","target","buttonContainer","AppHeader","useSelector","appHeader","updateFilter","TodoItem","updateModalOpen","setUpdateModalOpen","handleDelete","handleUpdate","NewDateTime","split","newdatetobeformatted","day","month","year","_Fragment","todoDetails","texts","todoText","format","todoActions","icon","MdDelete","MdEdit","AppContent","sortedTodoList","sort","a","b","filteredTodoList","content__wrapper","length","map","App","app__wrapper","Toaster","position","toastOptions","fontSize","store","configureStore","reducer","todoReducer","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.9bfc0738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"modal_wrapper__2O6r-\",\"container\":\"modal_container__2EYU4\",\"closeButton\":\"modal_closeButton__su0YW\",\"formTitle\":\"modal_formTitle__2pJCT\",\"form\":\"modal_form__273yU\",\"buttonContainer\":\"modal_buttonContainer__EYNKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__wrapper\":\"app_app__wrapper__4WNDA\",\"appHeader\":\"app_appHeader__3UFa_\",\"content__wrapper\":\"app_content__wrapper__1WrG3\",\"emptyText\":\"app_emptyText__obGNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__uO-zE\",\"button__select\":\"button_button__select__1PNu8\",\"button--primary\":\"button_button--primary__2oz_V\",\"button--secondary\":\"button_button--secondary__2LbGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__1cn1z\"};","import React from 'react';\r\nimport style from '../styles/modules/title.module.scss';\r\n\r\nfunction PageTitle({ children, ...rest }) {\r\n  return (\r\n    <p className={style.title} {...rest}>\r\n      {children}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default PageTitle;\r\n","export const getClasses = (classes) =>\r\n  classes\r\n    .filter((item) => item !== '')\r\n    .join(' ')\r\n    .trim();\r\n","import React from 'react';\r\nimport styles from '../styles/modules/button.module.scss';\r\nimport { getClasses } from '../utils/getClasses';\r\n\r\nconst buttonTypes = {\r\n  primary: 'primary',\r\n  secondary: 'secondary',\r\n};\r\nfunction Button({ children, type, variant, ...rest }) {\r\n  return (\r\n    <button\r\n      className={getClasses([\r\n        styles.button,\r\n        styles[`button--${buttonTypes[variant]}`],\r\n      ])}\r\n      type={type === 'submit' ? 'submit' : 'button'}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction SelectButton({ children, ...rest }) {\r\n  return (\r\n    <select\r\n      className={getClasses([styles.button, styles.button__select])}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport { SelectButton };\r\nexport default Button;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst getInitialTodo = () => {\r\n  // getting todo list\r\n  const localTodoList = window.localStorage.getItem('todoList');\r\n  // if todo list is not empty\r\n  if (localTodoList) {\r\n    return JSON.parse(localTodoList);\r\n  }\r\n  window.localStorage.setItem('todoList', []);\r\n  return [];\r\n};\r\n\r\nconst initialValue = {\r\n  filterStatus: 'all',\r\n  todoList: getInitialTodo(),\r\n};\r\n\r\nexport const todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState: initialValue,\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.todoList.push(action.payload);\r\n      const todoList = window.localStorage.getItem('todoList');\r\n      if (todoList) {\r\n        const todoListArr = JSON.parse(todoList);\r\n        todoListArr.push({\r\n          ...action.payload,\r\n        });\r\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\r\n      } else {\r\n        window.localStorage.setItem(\r\n          'todoList',\r\n          JSON.stringify([\r\n            {\r\n              ...action.payload,\r\n            },\r\n          ])\r\n        );\r\n      }\r\n    },\r\n    updateTodo: (state, action) => {\r\n      const todoList = window.localStorage.getItem('todoList');\r\n      if (todoList) {\r\n        const todoListArr = JSON.parse(todoList);\r\n        todoListArr.forEach((todo) => {\r\n          if (todo.id === action.payload.id) {\r\n            todo.status = action.payload.status;\r\n            todo.title = action.payload.title;\r\n          }\r\n        });\r\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\r\n        state.todoList = [...todoListArr];\r\n      }\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      const todoList = window.localStorage.getItem('todoList');\r\n      if (todoList) {\r\n        const todoListArr = JSON.parse(todoList);\r\n        todoListArr.forEach((todo, index) => {\r\n          if (todo.id === action.payload) {\r\n            todoListArr.splice(index, 1);\r\n          }\r\n        });\r\n        window.localStorage.setItem('todoList', JSON.stringify(todoListArr));\r\n        state.todoList = todoListArr;\r\n      }\r\n    },\r\n    updateFilterStatus: (state, action) => {\r\n      state.filterStatus = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodo, updateTodo, deleteTodo, updateFilterStatus } =\r\n  todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { MdOutlineClose } from 'react-icons/md';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styles from '../styles/modules/modal.module.scss';\r\nimport Button from './Button';\r\nimport { addTodo, updateTodo } from '../slices/todoSlice';\r\n\r\nfunction Modal({ type, modalOpen, setModalOpen, todo }) {\r\n  const [title, setTitle] = useState('');\r\n  const [status, setStatus] = useState('incomplete');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (type === 'update' && todo) {\r\n      setTitle(todo.title);\r\n      setStatus(todo.status);\r\n    } else {\r\n      setTitle('');\r\n      setStatus('incomplete');\r\n    }\r\n  }, [type, todo, modalOpen]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title === '') {\r\n      toast.error('Please enter a title');\r\n      return;\r\n    }\r\n\r\n    if (title && status) {\r\n      if (type === 'add') {\r\n        dispatch(\r\n          addTodo({\r\n            id: uuid(),\r\n            title,\r\n            status,\r\n            time: new Date().toLocaleString(),\r\n          })\r\n        );\r\n        toast.success('Task added successfully!');\r\n      }\r\n      if (type === 'update') {\r\n        if (todo.title !== title || todo.status !== status) {\r\n          dispatch(\r\n            updateTodo({\r\n              ...todo,\r\n              title,\r\n              status,\r\n            })\r\n          );\r\n        } else {\r\n          toast.error('No changes made');\r\n        }\r\n      }\r\n      setModalOpen(false);\r\n    } else {\r\n      toast.error(\"Title shouldn't be empty\");\r\n    }\r\n  };\r\n  return (\r\n    modalOpen && (\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.container}>\r\n          <div\r\n            className={styles.closeButton}\r\n            onClick={() => setModalOpen(false)}\r\n            onKeyDown={() => setModalOpen(false)}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <MdOutlineClose />\r\n          </div>\r\n          <form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\r\n            <h1 className={styles.formTitle}>\r\n              {type === 'add' ? 'add' : 'Update'} Task\r\n            </h1>\r\n            <label htmlFor=\"title\">\r\n              Title\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"status\">\r\n              Status\r\n              <select\r\n                name=\"status\"\r\n                id=\"status\"\r\n                value={status}\r\n                onChange={(e) => setStatus(e.target.value)}\r\n              >\r\n                <option value=\"incomplete\">Incomplete</option>\r\n                <option value=\"complete\">Complete</option>\r\n              </select>\r\n            </label>\r\n            <div className={styles.buttonContainer}>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                {type === 'add' ? 'Add task' : 'Update task'}\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"secondary\"\r\n                onClick={() => setModalOpen(false)}\r\n                onKeyDown={() => setModalOpen(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button, { SelectButton } from './Button';\r\nimport styles from '../styles/modules/app.module.scss';\r\nimport Modal from './Modal';\r\nimport { updateFilterStatus } from '../slices/todoSlice';\r\n\r\n\r\nfunction AppHeader() {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const filterStatus= useSelector((state)=>state.todo.filterStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateFilter = (e) => {\r\n    \r\n    dispatch(updateFilterStatus(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.appHeader}>\r\n  \r\n      <Button variant=\"primary\" onClick={() => setModalOpen(true)}>\r\n        Add Task\r\n      </Button>\r\n      <SelectButton\r\n        id=\"status\"\r\n        onChange={(e) => updateFilter(e)}\r\n        value={filterStatus}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"incomplete\">Incomplete</option>\r\n        <option value=\"complete\">Completed</option>\r\n      </SelectButton>\r\n      <Modal type=\"add\" modalOpen={modalOpen} setModalOpen={setModalOpen} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React, { useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { MdDelete, MdEdit } from 'react-icons/md';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTodo } from '../slices/todoSlice';\r\nimport styles from '../styles/modules/todoItem.module.scss';\r\nimport { getClasses } from '../utils/getClasses';\r\nimport Modal from './Modal';\r\n\r\n\r\nfunction TodoItem({ todo }) {\r\n  const dispatch = useDispatch();\r\n  \r\n  const [updateModalOpen, setUpdateModalOpen] = useState(false);\r\n\r\n\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteTodo(todo.id));\r\n    toast.success('Task deleted successfully');\r\n  };\r\n  const handleUpdate = () => {\r\n    setUpdateModalOpen(true);\r\n  };\r\n  const date = todo.time;\r\n  const NewDateTime = date.split(',');\r\n  const newdatetobeformatted = NewDateTime[0].split('/');\r\n  const day = newdatetobeformatted[0];\r\n  const month = newdatetobeformatted[1];\r\n  const year = newdatetobeformatted[2];\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.item}>\r\n        <div className={styles.todoDetails}>\r\n         \r\n          <div className={styles.texts}>\r\n            <p\r\n              className={getClasses([\r\n                styles.todoText,\r\n                todo.status === 'complete' && styles['todoText--completed'],\r\n              ])}\r\n            >\r\n              {todo.title}\r\n            </p>\r\n            <p className={styles.time}>\r\n              {format(new Date(year, month, day), 'MM/dd/yyyy')}\r\n              {NewDateTime[1]}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.todoActions}>\r\n          <div\r\n            className={styles.icon}\r\n            onClick={handleDelete}\r\n            onKeyDown={handleDelete}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <MdDelete />\r\n          </div>\r\n          <div\r\n            className={styles.icon}\r\n            onClick={handleUpdate}\r\n            onKeyDown={handleUpdate}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <MdEdit />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        type=\"update\"\r\n        todo={todo}\r\n        modalOpen={updateModalOpen}\r\n        setModalOpen={setUpdateModalOpen}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TodoItem from './TodoItem';\r\nimport styles from '../styles/modules/app.module.scss';\r\n\r\nfunction AppContent() {\r\n  const todoList = useSelector((state) => state.todo.todoList);\r\n  const sortedTodoList = [...todoList];\r\n  sortedTodoList.sort((a, b) => new Date(b.time) - new Date(a.time));\r\n\r\n  const filterStatus= useSelector((state)=> state.todo.filterStatus);\r\n  const filteredTodoList = sortedTodoList.filter(item =>{\r\n    if(filterStatus==='all'){\r\n      return true;\r\n    }\r\n    return item.status===filterStatus;\r\n  })\r\n\r\n  \r\n  return (\r\n    <div className={styles.content__wrapper}>\r\n      {filteredTodoList && filteredTodoList.length > 0\r\n        ? filteredTodoList.map((todo) => <TodoItem key={todo.id} todo={todo} />)\r\n        : 'Nothing to be done!'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppContent;\r\n","import React from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport PageTitle from './components/PageTitle';\nimport styles from './styles/modules/app.module.scss';\nimport AppHeader from './components/AppHeader';\nimport AppContent from './components/AppContent';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <PageTitle>Things I want to do before I die</PageTitle>\n        <div className={styles.app__wrapper}>\n          <AppHeader />\n          <AppContent />\n        </div>\n      </div>\n      <Toaster\n        position=\"bottom-right\"\n        toastOptions={{\n          style: {\n            fontSize: '1.4rem',\n          },\n        }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from '../slices/todoSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    todo: todoReducer,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './styles/GlobalStyles.css';\nimport '@fontsource/poppins';\nimport '@fontsource/poppins/500.css';\nimport '@fontsource/poppins/600.css';\nimport '@fontsource/poppins/700.css';\nimport { store } from './app/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"todoItem_item__3UgFJ\",\"todoDetails\":\"todoItem_todoDetails__1ybhP\",\"svgBox\":\"todoItem_svgBox__11IIV\",\"texts\":\"todoItem_texts__2Aq59\",\"todoText\":\"todoItem_todoText__RxXkF\",\"todoText--completed\":\"todoItem_todoText--completed__35-aN\",\"time\":\"todoItem_time__yerOE\",\"todoActions\":\"todoItem_todoActions__2FUZ3\",\"icon\":\"todoItem_icon__2IrQu\"};"],"sourceRoot":""}